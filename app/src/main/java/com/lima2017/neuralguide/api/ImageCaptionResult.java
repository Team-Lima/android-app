package com.lima2017.neuralguide.api;

import android.support.annotation.NonNull;
import android.support.annotation.Nullable;

import com.lima2017.neuralguide.api.web.NeuralGuideResultData;
import com.lima2017.neuralguide.api.web.StringToImprovementTipMapping;

import java.util.HashSet;

import java8.util.Optional;

/**
 * A DTO for passing the results of an image captioning attempt to the user.
 *
 * For Neural Guide WebAPI v0.1
 *
 * @author Henry Thompson, Tamara Norman
 * @version 1.0
 */

public class ImageCaptionResult {
    private final StringToImprovementTipMapping _stringMapper;

    /** The status code of the captioning attempt. */
    private final int _statusCode;

    /** The actual caption returned by the server. */
    private final String _caption;

    /** The successful classification parameter returned by the neural net */
    private final boolean _classificationSuccess;

    /** The list of improvements suggested by the server. */
    private final HashSet<ImprovementTip> _improvementTips;

    /**
     * The result of querying the API to obtain a caption for the image.
     * @param statusCode The status code associated with the result.
     * @param data The data returned about the image.
     */
    public ImageCaptionResult(final int statusCode, @NonNull final NeuralGuideResultData data) {
        _stringMapper = new StringToImprovementTipMapping();
        _statusCode = statusCode;
        _classificationSuccess = data.getClassificationSuccess();
        _caption = _classificationSuccess ? data.getText() : null;
        _improvementTips = createImprovementTipsSet(data.getImprovementTips());
    }

    /**
     * The result of a failed API query to obtain a caption for the image.
     * @param statusCode The status code associated with the result.
     */
    public ImageCaptionResult(final int statusCode) {
        _stringMapper = new StringToImprovementTipMapping();
        _statusCode = statusCode;
        _classificationSuccess = false;
        _caption = null;
        _improvementTips = null;
    }

    /**
     * @return <code>true</code> if and only if the API successfully generated a caption for the
     * image, even if it is not confident about the result.
     */
    public boolean success() {
        return _classificationSuccess;
    }

    /** @return The HTTP status code returned by the API. */
    public int getStatusCode() {
        return _statusCode;
    }

    /** @return The caption generated by the API. */
    @NonNull
    public Optional<String> getCaption() {
        return Optional.ofNullable(_caption);
    }

    /** @return The set of improvement tips returned by the API. */
    @NonNull
    public HashSet<ImprovementTip> getImprovementTips() {
        return _improvementTips;
    }

    private HashSet<ImprovementTip> createImprovementTipsSet(@Nullable final String[] improvementTips) {
        final HashSet<ImprovementTip> set = new HashSet<>();

        if (improvementTips != null){
            for (final String tip: improvementTips) {
                set.add(_stringMapper.getImprovementTip(tip));
            }
        }

        return set;
    }
}