package uk.ac.cam.cl.lima2017.neuralguide;

import android.hardware.Camera;
import android.media.Image;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.util.Log;
import android.widget.FrameLayout;

import uk.ac.cam.cl.lima2017.neuralguide.api.INeuralGuideApi;
import uk.ac.cam.cl.lima2017.neuralguide.api.OnImageCaptionedListener;
import uk.ac.cam.cl.lima2017.neuralguide.api.ImageCaptionResult;

/**
 * Represents the main activity that the user interacts with. It also acts as a Controller of
 * sorts into the API Layer of the application.
 */
public class NeuralGuideActivity extends AppCompatActivity {

    /**
     * The <code>View</code> through which what the Camera sees is displayed to the user.
     */
    private CameraView mCameraView;

    /**
     * An instance of the <code>Camera</code> object which this application has a lock on to.
     */
    private Camera mCamera;

    /**
     * Tag used in the log for errors generated by this activity.
     */
    private static final String TAG = "NeuralGuideActivity";

    /**
     * The instance of the Neural Guide API used by this Activity when relaying user commands to
     * the endpoint, and from which results will eminate.
     */
    private final INeuralGuideApi _api;

    /**
     * @param api The instance of the Neural Guided API through which requests to caption the image
     *            will be routed.
     */
    public NeuralGuideActivity(INeuralGuideApi api) {
        _api = api;
    }

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);

        setContentView(R.layout.activity_neural_guide);

        mCamera = getCameraInstance();

        if (mCamera == null) {
            // TODO: Deal with camera being unavailable
        }

        // Create our CameraView and set it as the content of our activity.
        mCameraView = new CameraView(this, mCamera);
        FrameLayout cameraFrame = (FrameLayout) findViewById(R.id.activity_neural_guide_camera_frame);
        cameraFrame.addView(mCameraView);
    }

    @Override
    protected void onPause() {
        super.onPause();
        releaseCamera();
    }

    /**
     * Uses the Neural Guide API to try to caption the image provided.
     * @param image The Image to be captioned.
     */
    public void captionImage(Image image) {
        _api.tryGetCaption(image, callback);
    }

    public OnImageCaptionedListener callback = new OnImageCaptionedListener() {
        @Override
        public void onImageCaptioned(ImageCaptionResult result) {

        }
    };

    /**
     * Safely obtains a <code>Camera</code> instance. Note that the camera resource could be
     * locked by another resource, in which case we will fail to obtain it.
     * @return A Camera object if it successfully could get hold of one, or null if not.
     */
    private static Camera getCameraInstance() {
        Camera c = null;

        try {
            c = Camera.open(); // attempt to get a Camera instance
        }
        catch (Exception e){
            Log.e(TAG, "Camera not found: " + e.getMessage());
        }

        return c;
    }

    /**
     * Releases the <code>Camera</code> resource for use by other applications.
     */
    private void releaseCamera() {
        if (mCamera != null){
            mCamera.release();
            mCamera = null;
        }
    }
}